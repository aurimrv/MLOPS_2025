name: CI Pipeline MLOps  # Workflow name (visible in GitHub UI)

# Trigger on push or PR to 'main' branch
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use GitHub's latest Ubuntu runner

    steps:
      # Checkout the repository (required to access source code)
      - name: Check out code  
        uses: actions/checkout@v3

      # Install Python 3.11
      - name: Set up Python  
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"  # Exact Python version to use

      # Install dependencies from requirements.txt
      - name: Install dependencies  
        run: pip install -r requirements.txt

      - name: Executar notebook Exploracao
        run: |
          jupyter nbconvert --to notebook --execute notebooks/01_exploracao.ipynb --output 01_exploracao_output.ipynb --output-dir notebooks

      - name: Executar notebook Validacao e Treino
        run: |
          jupyter nbconvert --to notebook --execute notebooks/02_pipeline_validacao.ipynb --output 02_pipeline_validacao_output.ipynb --output-dir notebooks

      - name: Executar notebook Monitoracao
        run: |
          jupyter nbconvert --to notebook --execute notebooks/04_monitor_fairness.ipynb --output 04_monitor_fairness_output.ipynb --output-dir notebooks

      # Run pytest normally
      - name: Rodar testes  automatizados
        run: pytest test_pipeline.py
        
      # Run pytest with coverage (fail if coverage < 80%). Include "--cov-branch \" below to use branch coverage
      - name: Run tests with coverage  
        run: |
          pytest --cov=./ \
                --cov-report=xml \
                --cov-fail-under=60 \
                test_pipeline.py

      - name: Upload to Codecov
        if: success()  # Only run if previous steps succeed
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Uses the secret
          file: ./coverage.xml  # Explicit path to coverage file
          flags: github-actions  # Optional: tag this upload
          override_commit: ${{ github.event.pull_request.head.sha }}
          override_branch: ${{ github.event.pull_request.head.ref }}
